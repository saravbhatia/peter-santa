plugins {
    id 'java-platform'
}
group = "ta.shared.platform"

javaPlatform {
    allowDependencies()
}

project.ext {
    navan_common_mod_version = '1.7'
    avro_version = '1.205-SNAPSHOT'
    avro_serde_version = '5.0.1'
    micrometer_registery_new_relic_version = '0.10.0'
    junit_version = '5.8.0'
    micrometer_version = '1.9.0'
    logback_encoder_version = '6.5'
    guava_version = '31.1-jre'
    commons_io_version = '2.11.0'
    commons_collections4_version = '4.4'
    joda_time_version = '2.10.14'
    jsoup_version = '1.15.2'
    nv_i18n_version = '1.29'
    okhttp_version = '4.10.0'
    aws_parameter_store_config_version = '2.4.2'
    jackson_bom_version = '2.13.0'
    spring_boot_dependencies_version = '2.6.6'
    spring_cloud_dependencies_version = '2021.0.3'

}

dependencies {
    api(platform("com.fasterxml.jackson:jackson-bom:" + jackson_bom_version))
    api(platform("org.springframework.boot:spring-boot-dependencies:" + spring_boot_dependencies_version))
    api(platform('org.springframework.cloud:spring-cloud-dependencies:' + spring_cloud_dependencies_version))
}

dependencies.constraints {
    api('com.tripactions:navan-common-web:' + project.navan_common_mod_version)
    api ('org.junit.jupiter:junit-jupiter-api:' + project.junit_version)
    api ('io.micrometer:micrometer-registry-prometheus:'+project.micrometer_version)
    api ('com.tripactions:ta-kafka-avro-autoconfigure:' + project.avro_version)
    api ('io.confluent:kafka-streams-avro-serde:' + project.avro_serde_version)
    api ('net.logstash.logback:logstash-logback-encoder:' + project.logback_encoder_version)
    api ('com.google.guava:guava:' + project.guava_version)
    api ('commons-io:commons-io:' + project.commons_io_version)
    api ('commons-collections4:' + project.commons_collections4_version)
    api ('joda-time:joda-time:' + project.joda_time_version)
    api ('org.jsoup:jsoup:' + project.jsoup_version)
    api ('com.neovisionaries:nv-i18n:' + project.nv_i18n_version)
    api ('com.squareup.okhttp3:okhttp:' + project.okhttp_version)
    api ('com.newrelic.telemetry:micrometer-registry-new-relic:' + project.micrometer_registery_new_relic_version)
    runtime ('io.awspring.cloud:spring-cloud-starter-aws-parameter-store-config:' + project.aws_parameter_store_config_version)
}